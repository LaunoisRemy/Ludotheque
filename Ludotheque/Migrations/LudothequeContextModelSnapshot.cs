// <auto-generated />
using System;
using Ludotheque.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ludotheque.Migrations
{
    [DbContext(typeof(LudothequeContext))]
    partial class LudothequeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ludotheque.Models.Difficulty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("label")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");
                });

            modelBuilder.Entity("Ludotheque.Models.Editor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Editors");
                });

            modelBuilder.Entity("Ludotheque.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DifficultyId")
                        .HasColumnType("int");

                    b.Property<int?>("EditorId")
                        .HasColumnType("int");

                    b.Property<int>("GameTime")
                        .HasColumnType("int");

                    b.Property<int?>("IllustratorId")
                        .HasColumnType("int");

                    b.Property<int>("MaxPlayer")
                        .HasColumnType("int");

                    b.Property<int>("MinPlayer")
                        .HasColumnType("int");

                    b.Property<int>("MinimumAge")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("PictureLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("int");

                    b.Property<bool>("Validate")
                        .HasColumnType("bit");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("EditorId");

                    b.HasIndex("IllustratorId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Ludotheque.Models.Illustrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Illustrators");
                });

            modelBuilder.Entity("Ludotheque.Models.MaterialSupport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaterialSupports");
                });

            modelBuilder.Entity("Ludotheque.Models.MaterialSupportsGames", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialSupportId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "MaterialSupportId");

                    b.HasIndex("MaterialSupportId");

                    b.ToTable("MaterialSupportsGames");
                });

            modelBuilder.Entity("Ludotheque.Models.Mechanism", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mechanisms");
                });

            modelBuilder.Entity("Ludotheque.Models.MechanismsGames", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("MechanismId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "MechanismId");

                    b.HasIndex("MechanismId");

                    b.ToTable("MechanismsGames");
                });

            modelBuilder.Entity("Ludotheque.Models.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("Ludotheque.Models.ThemesGames", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "ThemeId");

                    b.HasIndex("ThemeId");

                    b.ToTable("ThemesGames");
                });

            modelBuilder.Entity("Ludotheque.Models.Game", b =>
                {
                    b.HasOne("Ludotheque.Models.Difficulty", "Difficulty")
                        .WithMany("Games")
                        .HasForeignKey("DifficultyId");

                    b.HasOne("Ludotheque.Models.Editor", "Editor")
                        .WithMany("Games")
                        .HasForeignKey("EditorId");

                    b.HasOne("Ludotheque.Models.Illustrator", "Illustrator")
                        .WithMany("Games")
                        .HasForeignKey("IllustratorId");
                });

            modelBuilder.Entity("Ludotheque.Models.MaterialSupportsGames", b =>
                {
                    b.HasOne("Ludotheque.Models.Game", "Game")
                        .WithMany("MaterialSupportsGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ludotheque.Models.MaterialSupport", "MaterialSupport")
                        .WithMany("MaterialSupportsGames")
                        .HasForeignKey("MaterialSupportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ludotheque.Models.MechanismsGames", b =>
                {
                    b.HasOne("Ludotheque.Models.Game", "Game")
                        .WithMany("MechanismsGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ludotheque.Models.Mechanism", "Mechanism")
                        .WithMany("MechanismsGames")
                        .HasForeignKey("MechanismId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ludotheque.Models.Theme", b =>
                {
                    b.HasOne("Ludotheque.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("Ludotheque.Models.ThemesGames", b =>
                {
                    b.HasOne("Ludotheque.Models.Game", "Game")
                        .WithMany("ThemesGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ludotheque.Models.Theme", "Theme")
                        .WithMany("ThemesGames")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

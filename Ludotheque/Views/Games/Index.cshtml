@inject Microsoft.AspNetCore.Identity.SignInManager<Ludotheque.Areas.Identity.Data.LudothequeUser> signInManager;

@{
    ViewData["Title"] = "Index";
    Layout = "TableGame";
}
@section Head{
    <h1>Index</h1>
    @if (signInManager.IsSignedIn(User))
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
        @*  asp-controller = Nom du controller; asp-action = nom de l'action du controller, lien href ; method = *@
    }
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Nom : <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>
}

@section Bottom
{
    @{

        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
}

